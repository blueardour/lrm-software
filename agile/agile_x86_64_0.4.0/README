agile - Standalone AGILE v. 0.4.0, AliGnIng Long rEads.
--------------------------------------------------------------------------------------------
Principal Author: Sanchit Misra
Contact: smi539@eecs.northwestern.edu
Project Name: High Throughput Sequence Mapping for Next Generation Sequencers.
Team Members: Prof. Alok Choudhary, Prof. Wei-keng Liao, Prof. Ankit Agrawal, Sanchit Misra.
Lab: Center for Ultra Scale Computing and Information Security (CUCIS)
--------------------------------------------------------------------------------------------

AGILE is a sequence mapping tool specifically designed to map the longer reads (read length > 200) to a given reference genome. Currently it works for 454 reads, but efforts are being made to make it suitable to work for all sequencers, which produce longer reads. Looking at the current trend of increasing read lengths, soon most of the sequencers will have read lengths > 200. In comparison with existing tools, the most significant features of AGILE are:

> High flexibility. It allows a large number of mismatches and insertions/deletions in mapping. Current version of AGILE has been tested to work with upto 10% differences in mapping.
> High Sensitivity. AGILE correctly maps about ~99.8% reads.
> Ability to handle large datasets. We have successfully tested AGILE with human genome and a million batch queries.
> Speed. Using AGILE, we can map approximately 1.1 million reads of length 500 each to a reference human genome per hour. That means about 550 million bases per hour. At this rate, AGILE will need only 6 hours for a 1X coverage of the human genome.

--------------------------------------------------------------------------------------------

Usage
   agile <database> <query> <options> <output_file> > <mapping_quality_file>
where:
   database and query are each either a .fa , .nib or .2bit file,
   or a list these files one file name per line.
   output_file is file for the mapped result.
options:
   -tileSize=k     sets the length of tuples for creating hash table.  
                    Usually between 11 and 20 (default 16)
   -maxSIMs=n      sets the maximum #SIMs (single imperfect matches) allowed as a percentage of the read length.
                    This includes mismatches and indels
                    (default 5 (i.e., 5%) with -all option and 100 (i.e. 100 %) without -all option)
   -maxFreq=F      sets the maximum number of occurrences of a pattern (k-tuple) that are allowed.
                    k-tuples which occur more than F times are marked as overused and ignored.
                    The default value depends on the read length (for example, F = 8 for read length of 500) 
   -all            If this is used, the program outputs all the alignments which satisfy maxSIMs=n.
                    If this is not used, the program simply tries to find the best alignment
                    and outputs the best alignment it can find.
   -out=type       sets output file format.  Type is one of:
                   psl - Default.  Tab separated format, no sequence
                   pslx - Tab separated format with sequence
                   axt - blastz-associated axt format
                   maf - multiz-associated maf format
                   sim4 - similar to sim4 format
                   wublast - similar to wublast format
                   blast - similar to NCBI blast format
                   blast8- NCBI blast tabular format
                   blast9 - NCBI blast tabular format with comments

